# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2018-04-01 01:22
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=64, primary_key=True, serialize=False, verbose_name='Activation key')),
                ('name', models.CharField(blank=True, default='visitor', max_length=32)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('status', models.CharField(choices=[('v', 'visitor'), ('p', 'pending approve'), ('u', 'approved user')], default='v', max_length=2)),
            ],
            options={
                'db_table': 'account',
            },
        ),
        migrations.CreateModel(
            name='AccountRole',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=64, primary_key=True, serialize=False, verbose_name='Activation key')),
                ('account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='rbac.Account')),
            ],
            options={
                'ordering': ['account__email'],
                'db_table': 'account_role',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=32, unique=True)),
            ],
            options={
                'db_table': 'role',
            },
        ),
        migrations.AddField(
            model_name='accountrole',
            name='role',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='rbac.Role'),
        ),
        migrations.AddField(
            model_name='account',
            name='roles',
            field=models.ManyToManyField(through='rbac.AccountRole', to='rbac.Role'),
        ),
    ]
